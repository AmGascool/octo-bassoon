name: Build Pre-Release
on: 
  push:
    tags:
      - '**'
  workflow_dispatch:
  # pull_request:

concurrency: 
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  linux32_build:
    name: Linux x86 Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\+\.[0-9]\+\.[0-9]\+\)/\1-'"$SHA"'/' src/version.h
    - name: Build
      run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:x86-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' }}
      run: tar czf subconverter_linux32.tar.gz subconverter
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: subconverter_linux32
        path: subconverter_linux32.tar.gz

  linux64_build:
    name: Linux x86_64 Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\+\.[0-9]\+\.[0-9]\+\)/\1-'"$SHA"'/' src/version.h
    - name: Build
      run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:amd64-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' }}
      run: tar czf subconverter_linux64.tar.gz subconverter
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: subconverter_linux64
        path: subconverter_linux64.tar.gz

  Upload-Prerelease:
    name: Upload-Prerelease
    needs: [linux32_build, linux64_build]
    runs-on: ubuntu-latest
    steps:
    - name: Download
      uses: actions/download-artifact@v3
    - name: Display structure of downloaded files
      run: ls -R
    - name: Delete old Pre-release
      uses: dev-drprasad/delete-tag-and-release@v1.0
      with:
        tag_name: Pre-release
        github_token: ${{ secrets.GITHUB_TOKEN }}
        delete_release: true

    - name: Tag Repo
      uses: richardsimko/update-tag@v1
      with:
        tag_name: Pre-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Pre-release
      uses: softprops/action-gh-release@v1
      if: ${{  success() }}
      with:
        tag_name: Pre-release
        files: |
          ./subconverter_linux32/*
          ./subconverter_linux64/*
        prerelease: true
        generate_release_notes: true

    - name: Release Changelog Builder
      uses: mikepenz/release-changelog-builder-action@v4.1.1
